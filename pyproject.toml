[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.scripts]
tests = "pytest --cov=lektor_git_timestamp --cov-fail-under=100 tests"

[project]
name = "lektor-git-timestamp"
dynamic = ["version", "readme"]
description = "Lektor type to deduce page modification time from git"
keywords = ["Lektor plugin",]
urls.Home = "https://github.com/dairiki/lektor-git-timestamp"
authors = [
    {name = "Jeff Dairiki", email = "dairiki@dairiki.org"},
]
license = {file = "LICENSE"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Plugins",
    "Environment :: Web Environment",
    "Framework :: Lektor",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Version Control :: Git",
    "Topic :: Text Processing",
]
requires-python = ">=3.7"
dependencies = [
    "lektorlib>=1.2.1",
]
[project.entry-points."lektor.plugins"]
git-timestamp = "lektor_git_timestamp:GitTimestampPlugin"

[tool.pdm.version]
source = "scm"
[tool.pdm.build]
includes = [
    "lektor_git_timestamp.py",
]
source-includes = [
    "CHANGES.md",
    "README.md",
    "tests/",
    "tox.ini",
]

[tool.pdm.dev-dependencies]
dev = [
    "flake8>=5.0.4",
    "flake8-bugbear>=23.3.12",
    "mypy~=1.3",
    "lektor",
    "pdm-backend",              # for mypy
]
test = [
    "pytest>=7.3.1",
    "pytest-cov",
    "importlib_metadata; python_version<'3.8'",
    "packaging",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    '^\s*\.\.\.\s*$',
    '^\s*raise\s+NotImplementedError\(\)\s*$',
    '^(el)?if TYPE_CHECKING:\s*',
]

[tool.pytest.ini_options]
addopts = "--cov-report=term-missing --cov-report=html"

[tool.mypy]
files = [
    "$MYPY_CONFIG_FILE_DIR/**/*.py",
]
strict = true

[[tool.mypy.overrides]]
module = [
    "lektor.*",
]
ignore_missing_imports = true
